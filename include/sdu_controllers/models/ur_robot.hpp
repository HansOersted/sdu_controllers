#pragma once
#include <Eigen/Dense>

// This file has been generated by generate6LinkModelSymengine.py.
// Edit at your own risk.

class URRobot
{
 public:
  enum RobotType
  {
    UR3e,
    UR5e
  };

  explicit URRobot(RobotType type);
  int N;
  std::vector<double> gravity(const Eigen::Matrix<double, 6, 1>& q);

  Eigen::Matrix<double, 6, 6> jacobian(const Eigen::Matrix<double, 6, 1>& q);

  Eigen::Matrix<double, 6, 6> jacobian_dot(const Eigen::Matrix<double, 6, 1>& q, const Eigen::Matrix<double, 6, 1>& dq);

  Eigen::Matrix<double, 6, 6> inertia(const Eigen::Matrix<double, 6, 1>& q);

  Eigen::Matrix<double, 6, 6> coriolis(const Eigen::Matrix<double, 6, 1>& q, const Eigen::Matrix<double, 6, 1>& dq);

 private:
  double a2_;
  double a3_;
  double d1_;
  double d4_;
  double d5_;
  double d6_;
  double m_[6];
  double com_[6][3];
  double link_inertia_[6][3][3];
  double g[3];
};
